// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use "@angular/material" as mat;

@import "primeicons/primeicons.css";
@import "primeng/resources/themes/lara-light-blue/theme.css";
@import "primeng/resources/primeng.css";
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

$vocaTechPalette: (
  50: #e8f5e9,
  100: #c8e6c9,
  200: #a5d6a7,
  300: #81c784,
  400: #66bb6a,
  500: #4caf50,
  600: #43a047,
  700: #388e3c,
  800: #2e7d32,
  900: #1b5e20,
  A100: #b9f6ca,
  A200: #69f0ae,
  A400: #00e676,
  A700: #4eb479,
  contrast: (
    50: black,
    100: black,
    200: black,
    300: black,
    400: black,
    500: white,
    600: white,
    700: white,
    800: white,
    900: white,
    A100: black,
    A200: black,
    A400: black,
    A700: white,
  ),
);

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$vocaTech-primary: mat.define-palette($vocaTechPalette, A700);
$vocaTech-accent: mat.define-palette(mat.$grey-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$vocaTech-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$vocaTech-theme: mat.define-light-theme(
  (
    color: (
      primary: $vocaTech-primary,
      accent: $vocaTech-accent,
      warn: $vocaTech-warn,
    ),
    typography: mat.define-typography-config(),
    density: 0,
  )
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($vocaTech-theme);

/* You can add global styles to this file, and also import other style files */

@import url("https://fonts.googleapis.com/css2?family=Montserrat:wght@300;400;500;700&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Jost:ital,wght@0,100..900;1,100..900&display=swap");

:root {
  --font-size-var: 0.25rem;
  --light-blue: rgba(220, 233, 246, 0.5);
  --dark-blue: rgba(40, 148, 210, 1);
  --blue: rgba(184, 211, 237, 0.5);
  --green: rgba(78, 180, 121, 0.5);
  --light-green: rgba(188, 226, 200, 0.5);
  --orange: rgba(255, 161, 52, 0.5);
  --light-orange: rgba(255, 217, 175, 0.5);
}
html {
  height: 100%;
  width: 100%;
}
body {
  width: 99%;
  display: flex;
  flex-direction: column;
  gap: 40px;
  @media (max-width: 800px) {
    width: 96%;
  }
}
footer {
  width: 100%;
}
.jost {
  font-family: "Jost", sans-serif;
  font-weight: 400;
  color: black;
  line-height: 130%;
}
.jost-500 {
  @extend .jost;
  font-weight: 500;
}
.montserrat {
  font-family: "Montserrat", sans-serif;
  font-weight: 500;
  color: black;
  line-height: 130%;
}
.xxs {
  font-size: calc(var(--font-size-var) * 4);
  @media (max-width: 800px) {
    font-size: calc(var(--font-size-var) * 3);
  }
}
.xs {
  font-size: calc(var(--font-size-var) * 4);
  @media (max-width: 800px) {
    font-size: calc(var(--font-size-var) * 3);
  }
}
.s {
  font-size: calc(var(--font-size-var) * 4);
  @media (max-width: 800px) {
    font-size: calc(var(--font-size-var) * 3);
  }
}
.m {
  font-size: calc(var(--font-size-var) * 5);
  @media (max-width: 800px) {
    font-size: calc(var(--font-size-var) * 4);
  }
}
.l {
  font-size: calc(var(--font-size-var) * 6);
  @media (max-width: 800px) {
    font-size: calc(var(--font-size-var) * 4);
  }
}
.xl {
  font-size: calc(var(--font-size-var) * 7);
  @media (max-width: 800px) {
    font-size: calc(var(--font-size-var) * 4);
  }
}
.xxl {
  font-size: calc(var(--font-size-var) * 8);
  @media (max-width: 800px) {
    font-size: calc(var(--font-size-var) * 5);
  }
}
.xxxl {
  font-size: calc(var(--font-size-var) * 10);
  @media (max-width: 800px) {
    font-size: calc(var(--font-size-var) * 7);
  }
}
.logo {
  height: 50px;
  width: 200px;
  @media (max-width: 800px) {
    height: 25px;
    width: 100px;
  }
}
.big-logo {
  height: 100px;
  width: 400px;
  @media (max-width: 800px) {
    height: 25px;
    width: 100px;
    margin-bottom: 5%;
  }
}
.control {
  max-width: 90px;
  max-height: 70px;
  @media (max-width: 800px) {
    max-width: 45px;
    max-height: 35px;
  }
}
.contact-button {
  width: 300px;
  height: 60px !important;
  border-radius: 30px !important;
  @media (max-width: 800px) {
    max-width: 150px;
    max-height: 40px !important;
    border-radius: 15px !important;
  }
}
.grey {
  color: #5d525a;
}
.half {
  width: 50%;
  @media (max-width: 800px) {
    width: 100%;
  }
}
.white {
  color: white;
}
.shadow {
  border: 1px solid white;
  box-shadow: 0 0 10px rgba(0, 0, 255, 0.2);
  border-radius: 45px;
}
.shadow-small {
  @extend .shadow;
  border-radius: 20px;
}
.card {
  display: flex;
  flex-direction: row;
  @media (max-width: 800px) {
    width: 100%;
    padding: 5%;
    flex-direction: column;
  }
}
.gap {
  display: flex;
  flex-direction: column;
  gap: 40px;
  @media (max-width: 800px) {
    width: 94%;
    gap: 0px;
  }
}
.indents {
  padding: 2.5%;
  // margin: 0.5%;
  // @media (max-width: 800px) {
  //   padding: 2.5%;
  // margin: 2.5%;
  // }
}
.restricted-width {
  max-width: 60%;
  @media (max-width: 800px) {
    max-width: 90%;
  }
}
.flexbox-align-center {
  display: flex;
  align-items: center;
}
.flexbox-justify-center {
  display: flex;
  justify-content: center;
}
.dark-blue {
  background-color: var(--dark-blue);
  border-color: var(--dark-blue);
}
.blue {
  background-color: var(--blue);
  border-color: var(--blue);
}
.light-blue {
  background-color: var(--light-blue);
  border-color: var(--light-blue);
}
.green {
  background-color: var(--green);
  border-color: var(--green);
}
.light-green {
  background-color: var(--light-green);
  border-color: var(--light-green);
}
.orange {
  background-color: var(--orange);
  border-color: var(--orange);
}
.light-orange {
  background-color: var(--light-orange);
  border-color: var(--light-orange);
}
.content-box-small {
  @extend .jost-500;
  @extend .m;
  display: block;
  height: 30vh;
  width: 100%;
  @media (max-width: 800px) {
    height: 120px;
    width: 88%;
    padding: 5%;
  }
}
.content-box-big {
  @extend .content-box-small;
  width: 100%;
}
.case {
  @extend .jost;
  @extend .l;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  gap: 15vh;
  height: 100%;
  color: rgba(40, 148, 210, 1);
  padding-top: 5%;
  padding-left: 10%;
  padding-bottom: 5%;
  padding-right: 2.5%;
  width: 100%;
  &:hover {
    background-color: var(--blue);
    color: black;
  }
  @media (max-width: 800px) {
    height: 95%;
    width: 95%;
  }
}
.carousel {
  display: flex !important;
  justify-content: center !important;
  align-content: center !important;
  margin: 1%;
}
.highlighted {
  background-color: #2894d226;
  border: 5px #2894d226;
  padding: 5px;
  border-radius: 1rem;
  @media (max-width: 800px) {
    padding: 2px;
  }
}
